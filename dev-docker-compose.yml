services:
  fastapi:
    build: ./backend
    container_name: fastapi
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
    environment:
      - MONGO_URI=mongodb://admin:admin123@mongo:27017
    depends_on:
      - mongo
    networks:
      - app-network
    restart: always
    develop:
      watch:
        - path: ./backend/app
          target: /backend/app
          action: sync+restart
        - path: ./backend/requirements.txt
          target: /backend/requirements.txt
          action: rebuild

  mongo:
    image: mongo
    container_name: docker-mongo-1
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
    volumes:
      - mongodb:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d

    networks:
      - app-network
    hostname: mongo

  mongo_express:
    image: mongo-express:latest
    container_name: mongo_insight
    depends_on:
      - mongo
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin123
      - ME_CONFIG_BASICAUTH_USERNAME=expressadmin
      - ME_CONFIG_BASICAUTH_PASSWORD=express123
    networks:
      - app-network
    hostname: mongo-express

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    restart: always
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./qdrant/data:/qdrant/storage
    networks:
      - app-network

  redis:
    image: redis:8.0
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"      # 메시징 포트
      - "15672:15672"    # 웹 UI 포트
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - app-network
    restart: always


networks:
  app-network:
    driver: bridge

volumes:
  mongodb:
  redis-data:
  rabbitmq-data: